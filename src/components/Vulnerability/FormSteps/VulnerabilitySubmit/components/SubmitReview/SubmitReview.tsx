import { useContext } from "react";
import { useTranslation } from "react-i18next";
import { VulnerabilityFormContext } from "../../../../VulnerabilityForm";
import Loading from "components/Shared/Loading";
import EditIcon from "assets/icons/edit.svg";
import "./index.scss";
import { useEthers } from "@usedapp/core";
import { useVaults } from "hooks/useVaults";
import { useSupportedNetwork } from "hooks/useSupportedNetwork";

export default function SubmitReview() {
  const { t } = useTranslation();
  const { account } = useEthers()

  const { vulnerabilyData, submittingVulnerability: submittingVurnability, submitVulnerability: submitVurnability, setCurrentStep } = useContext(VulnerabilityFormContext);

  const { vaults } = useVaults();
  const vault = vaults?.find(vault => vault.id === vulnerabilyData?.project?.projectId)!;

  const isSupportedNetwork = useSupportedNetwork();
  const isVerified = vulnerabilyData?.project?.verified && vulnerabilyData?.contact?.verified && vulnerabilyData?.description?.verified && vulnerabilyData?.terms?.verified;
  const committeeCheckedIn = vault && vault.committeeCheckedIn;

  const showSubmitWarning = !isVerified || !account;

  const handleSubmit = async () => {
    submitVurnability();
  }

  return (
    <div className="submit-review-wrapper">
      {t("SubmitVulnerability.Submit.review-notice")}

      <div className="review-details-container">
        <div className="project-and-contact-container">
          <div className="review-item project-name-item">
            <div className="item-title-container">
              <span>Project Name:</span>
              <img src={EditIcon} alt="edit" onClick={() => setCurrentStep(0)} />
            </div>
            <span className="item-value">{vulnerabilyData?.project?.projectName}</span>
          </div>
          <div className="review-item">
            <div className="item-title-container">
              <span>Contact Information:</span>
              <img src={EditIcon} alt="edit" onClick={() => setCurrentStep(1)} />
            </div>
            <span className="item-value">{vulnerabilyData?.contact?.username}</span>
          </div>
        </div>

        <div className="description-container">
          <div className="review-item">
            <div className="item-title-container">
              <span>Vulnerability Description:</span>
              <img src={EditIcon} alt="edit" onClick={() => setCurrentStep(2)} />
            </div>
            <span className="item-value">{vulnerabilyData?.description?.description}</span>
          </div>
        </div>
      </div>

      <button disabled={!isVerified || submittingVurnability || !account || (vault && !committeeCheckedIn) || !isSupportedNetwork} onClick={handleSubmit}>SUBMIT</button>
      {vault && !committeeCheckedIn && <span className="error-label">COMMITTEE IS NOT CHECKED IN YET!</span>}
      {showSubmitWarning && <span className="error-label">{`Please make sure you completed all steps and your wallet is connected.`}</span>}
      {(submittingVurnability) && <Loading fixed extraText="Submitting might take longer than usual" domElement={document.getElementById("accrodionWrapper") as HTMLElement} zIndex={0} />}
    </div>
  )
}