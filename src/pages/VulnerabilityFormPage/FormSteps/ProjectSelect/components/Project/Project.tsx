import { useVaultsTotalPrices } from "components/Vault/hooks/useVaultsTotalPrices";
import millify from "millify";
import classNames from "classnames";
import { IVault } from "types/types";
import { formatWei, ipfsTransformUri } from "utils";
import "./index.scss";

interface IProps {
  vault: IVault;
  selected: boolean;
  onClick: (vault) => void;
}

export default function Project({ vault, selected, onClick }: IProps) {
  const { totalPrices } = useVaultsTotalPrices(vault.multipleVaults ?? [vault]);
  const sumTotalPrices = Object.values(totalPrices).reduce((a, b = 0) => a + b, 0);
  const honeyPotBalanceValue = formatWei(vault.honeyPotBalance, 3, vault.stakingTokenDecimals);

  return (
    <tr className={classNames("project-row", { "selected": selected })} onClick={() => onClick(vault)}>
      <td className="project-name-wrapper">
        <img className="project-logo" src={ipfsTransformUri(vault.description?.["project-metadata"].icon)} alt="project logo" />
        {vault.description?.["project-metadata"].name}
      </td>
      <td>
        {!vault.multipleVaults && <span>{honeyPotBalanceValue}</span>}
        <span className="total-usd">&nbsp;{`â‰ˆ $${millify(sumTotalPrices)}`}</span>
      </td>
    </tr>
  )
}
